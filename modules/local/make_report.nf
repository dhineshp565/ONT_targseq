#!/usr/bin/env nextflow

process make_report {
    publishDir "${params.out_dir}/",mode:"copy"
    label "high"
    
    input:
    path(csv)
    path(krona)
    path(mappedreads)
    path(cons_only)
    path(abricate)
    path(blast_formatted)
    path(png)
    path(rmdfile)
    path(igv)
    path (orf)
    path(seq_length)
    path(rmdfile_case)
    
    output:
    path("*.html")

    script:
    """
    cp ${rmdfile} rmdfile.Rmd
    cp ${rmdfile_case} rmdfile_case.Rmd

    Rscript -e "rmarkdown::render(input= 'rmdfile.Rmd', params=list(csv= '${csv}', krona= '${krona}', png='*.png', igv='${igv}'), output_file=paste0('ONT_targseq_results_report_',format(Sys.time(), '%Y-%m-%d_%H-%M-%S'), '.html'))"

    if grep -q "PDS" ${csv}; then
		# extract unique case names from the CSV file generated by makecsv.sh
		cut -f 1 -d ',' ${csv} | grep "PDS" | cut -f 1 -d'-' | uniq > caselist.txt
		#get all the samples from a single case
		for case in \$(cat caselist.txt);do cut -f 1 -d, samplelist.csv|grep \$case > case_samples.csv

			Rscript -e "rmarkdown::render(input = 'rmdfile_case.Rmd', params = list(csv = 'case_samples.csv', png = '*.png'), output_file = paste0('\$case', '.html'))"
			

		done
	fi
    """
}
